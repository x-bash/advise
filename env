# shellcheck shell=bash

@env.default(){
    local VAL VAR=${1}
    shift
    eval "VAL=\${$VAR}"
    
    if [ $1 != "--" ]; then
        echo "Second parameter should be --, then following the choices" >&2
    fi

    shift

    if [ -n "$_ENV_HELP" ]; then
        echo "Environment Variable $VAR Expecting: $@"
        return 0
    fi

    for i in "$@"; do
        if [ "$VAL" == "$i" ]; then
            return 0
        fi
    done


    echo "Environment Variable $VAR \nExpect: $@ \nBut get: '$VAL'" >&2
    # return 1

    local latest_code=$(trap -p return)
    trap  "$VAR='$1'; eval \"$latest_code\" " RETURN

    return 0
}

alias @env.option="local"
@env.require(){
    for i in "$@"; do
        eval "\${$i:?Env variable NOT Set: $i}"
    done
}

# first argument is default

# @env direction -- private public innerSource
# @env docType fullName createdTime updateTime
# @env.int work

## env must be optional
## If must have, then we should put it in argument

work(){
    # local direction=${direction:-private}
    eval $(env.parse "
        direction -- private public innerSource
        !mode --
    ")

    eval "$(
        @env    direction -- private public innerSource
        @env    docType -- fullName createdTime updateTime

        @env.require name "Provide Name" string
        @env.require age "Provide age" int
    )"

    @env.parse '
        direction "Provide direction" -- private public innerSource
    '

    @env direction "Provide direction" -- private public innerSource
    @env docType "Provide work" -- fullName createdTime updateTime

    @env.require name "Provide name"

    @env.parse

    echo $direction
}




