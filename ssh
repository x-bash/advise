
ssh.m(){
    local server=()
    local args=()

    local label=0 i
    for i in "$@"; do
        if [ "$i" == "--" ]; then
            label=1
            continue
        fi

        if [ "$label" -eq 0 ]; then
            server+=("$i")
        else
            args+=("$i")
        fi
    done

    if [ ${#args[@]} -eq 0 ]; then
        echo "ssh arguments list should not be empty" >&2
        return 1
    fi

    for i in "${server[@]}"; do
        ssh "$i" "${args[*]}"
    done
}

# Parse ssh config file
ssh.config(){
    :
}

# auto detect whether it is break down, recomment
ssh.rev(){
    :
}

ssh.port-foward(){
    :
}

ssh.dynamic.start(){
    local name="${1:?Please connection name}"
    if crontab -l | grep "NAME=$name"; then
        echo "Already Exists: $name" >&2
        crontab -l | grep "NAME=$name" 1>&2
        return 1
    fi
    echo "* * * * * source $HOME/.x-cmd.com/x-bash/std/ssh && NAME=$name ssh.dynamic.running.check $*" | crontab -
}

# https://github.com/mgwoo/SSH-Tunnel-Auto-reconnecting/blob/master/tunnel.sh
ssh.dynamic.running.check(){
    local PORT=${ADDR:?"Provide forward port"}
    if ! echo > "/dev/tcp/$ADDR/$PORT"; then # port is close
        pkill -f "fNTD$PORT"
        ssh -o ExitOnForwardFailure=yes "-fNVTD$PORT" "$@"
    fi
}

ssh.dynamic.stop(){
    local name="${1:?Please connection name}"
    : remove crontab
    crontab -l | grep -v "NAME=$name" | crontab -
}

# using tmux session to make sure it is a permanant connection
ssh.tmux(){
    ssh -t "$@" tmux new -A -s x-bash.com/ssh/tmux
}



