# shellcheck shell=bash

xrc log advise xrc
xrc assert

test123(){
    local fp="./dev/test/test.json"
    local IFS=$'\002' # IFS="$(printf "\002")"

    s="$*"

    {
        cat "$fp"
        printf "\034%s\034" "$s"  # printf "\034${s}\034"
    } | awk -f "./v0.awk" # 2>/dev/null
}

test_at(){
    assert_stdout "test123 @a" <<A
@a1
@a2
@a3
A
}

# time test123 "$dir/3.json" r
# test123 test-data2.json work r

# time test123 "$dir/21.json" repo ""
# time test123 "$dir/21.json" user create --username ""
# time test123 "$dir/21.json" user create --username "c:"
# cat "$dir/21.json"
# time test123 "$dir/21.json" "+"

# time test123 "$dir/21.json" --value ""
# time test123 "$dir/21.json" --value "+"

# time test123 "$dir/21.json" --value +a ""

# time test123 "$dir/21.json" --value +a :a repo

# time test123 "$dir/3.json" repo --debug --repo abc --
# time test123 "$dir/3.json" repo --debug --repo abc -
# time test123 "$dir/3.json" repo --debug --repo abc 1 ""
# time test123 "$dir/3.json" repo --debug --repo abc 1 2 ""
# time test123 "$dir/3.json" repo --debug --repo abc ""
# time test123 "$dir/3.json" repo --debug -r3 3 ""

# time test123 "$dir/3.json" user create ""
# time test123 "$dir/3.json" repo --repo2 ""
# time test123 "$dir/3.json" repo --repo2 "abc" ""
# time test123 "$dir/3.json" user create1 ""


start_test() {
    < "$1" awk '$0~/^test_[^\(]+\(\)/{ gsub(/\(\)\{/, "", $0); print $0 }' | while read -r line; do
        echo "Testing Function: $line"
        if ! eval "$line"; then
            printf "\033[0;31m======= Fail at function: %s \033[0m" "$line" >&2
            break
        fi
    done
}

start_test ./dev/test/v0_test_awk