# shellcheck shell=bash

# author:       Li Junhao           edwin.jh.lee@gmail.com    edwinjhlee.github.io
# maintainer:   Li Junhao

dict_make(){
    local O="${1:?list_name}"
    eval "$O=0"
}

# O=b dload "$( a.dump | dgrep "abc" | dgerp "abc" )"

dict_dump(){
    local O="${O:?list_name}"
    local data
    eval printf "%s" "\"\$${O}\""
}

dict_load(){
    local O="${O:?list_name}"
    local s
    s="$(cat)"
    eval "$O"='"$s"'
}

: <<'DOCTEST'
> dict_make b
> O=b dict_put 1 a
> O=b dict_put 2 b
> O=b dict_put 3 c
> O=b dict_has 2 && echo yes
yes
> O=b dict_has 4 && echo yes
DOCTEST
dict_has(){
    dict_get "$@" > /dev/null
}

: <<'DOCTEST'
> dict_make b
> O=b dict_put 1 a
> O=b dict_put 2 b
> O=b dict_put 3 c
> O=b dict_size
3
DOCTEST
dict_size(){
    local data
    data="$(eval printf "%s" "\"\$${O:?list_name}\"")"

    local len
    len="${data##*${DICT_SEP}}"

    printf "%s" "${len:-0}"
}

: <<'DOCTEST'
> dict_make b
> O=b dict_isempty && echo yes
yes
> O=b dict_put 1 a
> O=b dict_isempty && echo yes
DOCTEST
dict_isempty(){
    [ "$(dict_size)" -eq 0 ]
}

: <<'DOCTEST'
> dict_make b
> O=b dict_put 1 a
> O=b dict_put 2 b
> O=b dict_put 3 c
> O=b dict_get 2
b
DOCTEST
dict_get(){
    if [ -z "$O" ]; then
        dict_iget "$@"
        return
    fi
    eval printf "%s" "\"\$${O}\"" | dict_iget "$@"
}

dict_put(){
    if [ -z "$O" ]; then
        dict_iput "$@"
        return
    fi

    local s
    s="$(eval printf "%s" "\"\$${O}\"" | dict_iput "$@")"

    eval "$O=\"\$s\""
}

: <<'DOCTEST'
> dict_make b
> O=b dict_put el user edwinjhlee
> O=b dict_put lt user lteam
> O=b dict_put el password goforit
> O=b dict_put lt password 2008
> O=b dict_scope el | dict_print
user=edwinjhlee
password=goforit
> O=b dict_scope lt | dict_json
{
  "user": "lteam",
  "password": "2008"
}
DOCTEST
dict_scope(){
    if [ -z "$O" ]; then
        dict_iscope "$@"
        return
    fi

    eval printf "%s" "\"\$${O}\"" | dict_iscope "$@"
}

: <<'DOCTEST'
> dict_make b
> O=b dict_put 1 a
> O=b dict_put 2 b
> O=b dict_put 3 c
> O=b dict_drop 4 && echo yes
> O=b dict_has 2 && echo yes
yes
> O=b dict_drop 2 && echo yes
yes
> O=b dict_has 2 && echo yes
DOCTEST
dict_drop(){
    if [ -z "$O" ]; then
        dict_idrop "$@"
        return
    fi
    
    local O="${O:?list_name}"
    local s
    if s="$(eval printf "%s" "\"\$${O}\"" | dict_idrop "$@")"; then
        eval "$O=\"\$s\""
    else
        return 1
    fi    
}

: <<'DOCTEST'
> dict_make b
> O=b dict_put 1 a
> O=b dict_put 2 b
> O=b dict_put 3 c
> O=b dict_dropr "[1-3]+" && echo yes
yes
> O=b dict_has 1 && echo yes
> O=b dict_has 3 && echo yes
DOCTEST
dict_dropr(){
    if [ -z "$O" ]; then
        dict_idropr "$@"
        return
    fi

    local O="${O:?list_name}"
    local s
    if s="$(eval printf "%s" "\"\$${O}\"" | dict_idropr "$@")"; then
        eval "$O=\"\$s\""
    else
        return 1
    fi
}


dict_grep(){
    if [ -z "$O" ]; then
        dict_igrep "$@"
        return
    fi
    
    local O="${O:?list_name}"
    local s
    if s="$(eval printf "%s" "\"\$${O}\"" | dict_igrep "$@" -)"; then
        eval "$O=\"\$s\""
    else
        return 1
    fi    
}

dict_igrepr(){
    if [ -z "$O" ]; then
        dict_igrepr "$@"
        return
    fi

    local O="${O:?list_name}"
    local s
    if s="$(eval printf "%s" "\"\$${O}\"" | dict_igrepr "$@" -)"; then
        eval "$O=\"\$s\""
    else
        return 1
    fi
}

dict_json(){
    if [ -z "$O" ]; then
        dict_ijson "$@"
        return
    fi
    eval printf "%s" "\"\$${O}\"" | dict_ijson "$@"
}

dict_print(){
    if [ -z "$O" ]; then
        dict_iprint "$@"
        return
    fi
    eval printf "%s" "\"\$${O}\"" | dict_iprint "$@"
}

