# shellcheck shell=bash disable=SC2039,3043

# author:       Li Junhao           l@x-cmd.com    edwinjhlee.github.io
# maintainer:   Li Junhao

if [ -n "${ZSH_VERSION}${BASH_VERSION}" ]; then

xrc log init advise

ADVISE_AWK_PATH="$(xrc which advise/v0.awk)"

advise(){
    local op="${1:?Provide subcommand}"
    case "$op" in
        :ls)
            ls "${TMPDIR%/}/.x-cmd/advise_auto_json" ;;
        :rm)
            rm -rf "${TMPDIR%/}/.x-cmd/advise_auto_json"/*  ;;
        *)
            _advise_main "$@" ;;
    esac
}

_advise_main(){
    local func="${1:?Provide function name}"
    local filepath="${2}"
    local tmp_filepath=${TMPDIR%/}/.x-cmd/advise_auto_json/$func
    mkdir -p "$(dirname "$tmp_filepath")"

    if [ - = "$filepath" ]; then
        filepath=$tmp_filepath
        advise_log "Pipe standard input to $filepath"
        cat >"$filepath"
    elif [ -z "$filepath" ]; then
        local filepath=$tmp_filepath
        if [ -n "$___XRC_UDPATE" ] || [ ! -f "$filepath" ]; then
            advise_log debug "Pipe the result of \"$func _x_cmd_advise_json\" to $filepath"
            local content
            content="$(X_CMD_ADVISE_FUNC_NAME=$func eval "$func" _x_cmd_advise_json)"
            if [ $? = 126 ]; then
                printf "%s" "$content" >"$filepath"
            else
                advise_log warn "Fail to write file because the return code of \"$func _x_cmd_advise_json\" is not 126."
                return 0
            fi
        fi
    else
        advise_log debug "Copy self-defined file $filepath to $tmp_filepath"
        cp "$filepath" "$tmp_filepath"
        filepath="$tmp_filepath"
    fi

    eval "_adviser_of_${func}(){
        [ -f \"$filepath\" ] && _advise <\"$filepath\"
    }"

    complete -F "_adviser_of_${func}" "$func"
}

_advise() {
    shift
    local IFS=$'\002' # IFS="$(printf "\002")"

    local cur="${COMP_WORDS[COMP_CWORD]}"
    if [ "$cur" == "" ]; then
        # Notice: The following line handle zsh compatibility problem.
        # In zsh, When input word is empty, COMP_WORDS[COMP_CWORD] does not exist.
        # In bash, When input word is empty, COMP_WORDS[COMP_CWORD] exist, and it is ""
        # This will result in difference value of "${COMP_WORDS[*]}"
        COMP_WORDS[COMP_CWORD]=""
    fi

    s="${COMP_WORDS[*]}"
    s="${s#*$IFS}"

    IFS=$'\n'   # Bash/Zsh Only

    local result
    result="$(
        {
            cat
            printf "\034%s\034" "$s"  # printf "\034${s}\034"
        } | awk -f "$ADVISE_AWK_PATH" 2>/dev/null
    )"

    local cmd="${result##*#> }"
    local cmd_result=""
    if [ "$cmd" != "$result" ]; then
        cmd_result="$(eval "$cmd")"
        result="${result%%#> *}"
    fi

    # shellcheck disable=SC2207
    COMPREPLY=(
        $(
            compgen -W "$result
$cmd_result" -- "$cur"
        )
    )
}

if [ -n "$ZSH_VERSION" ]; then
    autoload -U +X bashcompinit compinit && bashcompinit && compinit
fi

else

advise_log info "advise is only available in 'bash' or 'zsh'."

fi
