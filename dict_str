# shellcheck shell=bash

# author:       Li Junhao           edwin.jh.lee@gmail.com    edwinjhlee.github.io
# maintainer:   Li Junhao


# Preserve
DICT_SEP="$(printf "\003")"     #
DICT_KV_SEP="$(printf "\004")" 

dict_make(){
    local O="${1:?list_name}"
    eval "$O=0"
}


dict_free(){
    eval "unset $O"
}

# O=b dict_load "$(O=a dict_dump | dict )""
# O=b dict_load "$( a.dump | dict_key_glob "abc" | dict_value_glob "abc" )"

dict_dump(){
    local O="${O:?list_name}"
    local data
    eval printf "%s" "\"\$${O}\""
}

dict_load(){
    local O="${O:?list_name}"
    local s
    s="$(cat)"
    eval "$O"='"$s"'
}

: <<'DOCTEST'
> dict_make b
> O=b dict_put 1 a
> O=b dict_put 2 b
> O=b dict_put 3 c
> O=b dict_has 2 && echo yes
yes
> O=b dict_has 4 && echo yes
DOCTEST
dict_has(){
    dict_get "$1" > /dev/null
}

: <<'DOCTEST'
> dict_make b
> O=b dict_put 1 a
> O=b dict_put 2 b
> O=b dict_put 3 c
> O=b dict_size
3
DOCTEST
dict_size(){
    local data
    data="$(eval printf "%s" "\"\$${O:?list_name}\"")"

    local len
    len="${data##*${DICT_SEP}}"

    printf "%s" "${len:-0}"
}

: <<'DOCTEST'
> dict_make b
> O=b dict_isempty && echo yes
yes
> O=b dict_put 1 a
> O=b dict_isempty && echo yes
DOCTEST
dict_isempty(){
    [ "$(dict_size)" -eq 0 ]
}

: <<'DOCTEST'
> dict_make b
> O=b dict_put 1 a
> O=b dict_put 2 b
> O=b dict_put 3 c
> O=b dict_get 2
b
DOCTEST
dict_get(){
    local O="${O:?list_name}"
    local data
    data="$(eval printf "%s" "\"\$${O}\"")"

    eval printf "%s${DICT_SEP}%s" "${1:?Provide value}" "$data" | awk -v RS="${DICT_SEP}" \
    '
        BEGIN { exit_code = 1   }
        NR==1 { key = $0; keyline = ""    }
        NR>=2 {
            if (NR % 2 == 0) { # key
                if (key == $0) {
                    keyline = $0
                }
            } else {
                if (keyline != "") {
                    printf("%s", $0)
                    exit_code = 0
                    exit 0
                }
            }
        }
        END   { exit exit_code  }
    ' -
}

dict_put(){
    local O="${O:?list_name}"

    local s
    s="$(eval printf "%s" "\"\$${O}\"" | _dict_put "$@")"

    eval "$O=\"\$s\""
}

: <<'DOCTEST'
> dict_make b
> O=b dict_put 1 a
> O=b dict_put 2 b
> O=b dict_put 3 c
> O=b dict_drop 4 && echo yes
> O=b dict_has 2 && echo yes
yes
> O=b dict_drop 2 && echo yes
yes
> O=b dict_has 2 && echo yes
DOCTEST
dict_drop(){
    local O="${O:?list_name}"
    local s
    if s="$(eval printf "%s" "\"\$${O}\"" | _dict_drop "$@" -)"; then
        eval "$O=\"\$s\""
    else
        return 1
    fi
}

: <<'DOCTEST'
> dict_make b
> O=b dict_put 1 a
> O=b dict_put 2 b
> O=b dict_put 3 c
> O=b dict_dropr "[1-3]+" && echo yes
yes
> O=b dict_has 1 && echo yes
> O=b dict_has 3 && echo yes
DOCTEST
dict_dropr(){
    local O="${O:?list_name}"
    local s
    if s="$(eval printf "%s" "\"\$${O}\"" _dict_dropr "$@" -)"; then
        eval "$O=\"\$s\""
    else
        return 1
    fi
}

# shellcheck disable=SC2120
dict_print(){
    local O="${O:?list_name}"
    local data
    data="$(eval printf "%s" "\"\$${O}\"")"

    if [ "$#" -eq 0 ]; then
        printf "${ITEM_SEP:-"\\n"}${DICT_SEP}${KV_SEP:-"="}${DICT_SEP}%s"  "$data" | tr "\n" "\001" | awk -v RS="${DICT_SEP}" -v KV_SEP="$DICT_KV_SEP" \
        '
            NR==1 {     
                if (ITEM_SEP == "\\n")  ITEM_SEP = "\n"
                if (ITEM_SEP == "\\t")  ITEM_SEP = "\t"
                if (ITEM_SEP == "\\v")  ITEM_SEP = "\v"
                ITEM_SEP=$0
            }
            NR==2 {     KV_SEP  =$0         }
            NR==3 { 
                len = $0;   result=""
            }
            NR>=4 {
                if (NR % 2 == 0) { # key
                    key = $0
                } else {
                    if (NR == 5) {
                        result = result                 key KV_SEP $0
                    } else {
                        result = result  ITEM_SEP       key KV_SEP $0
                    }
                }
            }
            END   {
                gsub("\001", "\n", result)
                printf("%s", result)
            }
        ' -
    else
        printf "${ITEM_SEP:-"\\n"}${DICT_SEP}${KV_SEP:-"="}${DICT_SEP}%s${DICT_SEP}%s" "$1" "$data" | tr "\n" "\001" | awk -v RS="${DICT_SEP}" \
        '
            NR==1 {     ITEM_SEP=$0         }
            NR==2 {     KV_SEP  =$0         }
            NR==3 {     pattern = $0; enable=""; result = "";  }
            NR>=5 {
                if (NR % 2 == 1) {          # key
                    if ($0 ~ pattern)       enable = $0
                } else {
                    if (enable != "") {
                        if (result == "")   result =            enable KV_SEP $0
                        else                result = ITEM_SEP   enable KV_SEP $0
                        enable = ""
                    }
                }
            }
            END   {
                gsub("\001", "\n", result)
                printf("%s", result)
            }
        ' -
    fi
}
