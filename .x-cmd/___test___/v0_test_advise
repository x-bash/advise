advise_test(){
    local IFS=$'\002'
    {
        printf "%s\n" "$*"
        cat "$(x wsroot)"/.x-cmd/dev/data/advise_test.json
    } | awk \
        -v ZSHVERSION="$ZSH_VERSION" \
        -f "$___X_CMD_ROOT_MOD/awk/lib/default.awk" \
        -f "$___X_CMD_ROOT_MOD/awk/lib/json.awk" \
        -f "$___X_CMD_ROOT_MOD/awk/lib/jiter.awk" \
        -f "$___X_CMD_ROOT_MOD/awk/lib/sh.awk" \
        -f "$___X_CMD_ROOT_MOD/advise/lib/awk/advise.complete.awk" \
        -f "$___X_CMD_ROOT_MOD/advise/lib/awk/advise.main.awk" \
        -f "$___X_CMD_ROOT_MOD/advise/lib/awk/advise.obj.awk" \
        -f "$___X_CMD_ROOT_MOD/advise/lib/awk/util.awk"
}

test_1(){
    @assert stdout advise_test '' <<A
offset=1
candidate_arr=(
'a'
'f'
'c'
)
A
}

test_2(){
    @assert stdout advise_test -'' <<A
offset=1
candidate_arr=(
'-use:it is a subcmd'
'-u:it is a subcmd'
)
A
}

test_3(){
    @assert stdout advise_test a ddd ↑→↓ '' <<A
offset=3
candidate_exec="___x_cmd_pkg_ls";
A
}

test_4(){
    @assert stdout advise_test -u 123 '' <<A
offset=
candidate_arr=(
'123'
)
A
}

test_5(){
    @assert stdout advise_test -u 123 123 '' <<A
offset=
candidate_arr=(
'1'
'2.3'
'5'
)
A
}

test_6(){
    @assert stdout advise_test -u 123 123 '' <<A
offset=
candidate_arr=(
'1'
'2.3'
'5'
)
A
}

test_7(){
    @assert stdout advise_test a ddd '' <<A
offset=3
candidate_arr=(
'\\\$ff'
'"llll"'
'+'
'你好'
'のの'
'↑→↓'
'③⑥'
)
A
}



@assert:file:func