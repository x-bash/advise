# shellcheck shell=sh

# author:       Li Junhao           edwin.jh.lee@gmail.com    edwinjhlee.github.io
# maintainer:   Li Junhao

# shellcheck disable=SC2039

# Refer https://serverfault.com/questions/103359/how-to-create-a-uuid-in-bash
# Refer https://github.com/Bash-it/bash-it/blob/master/aliases/available/uuidgen.aliases.bash
rand_uuid(){
    if command -v uuid 1>/dev/null; then # Linux
        uuid "$@"
    elif command -v uuidgen 1>/dev/null; then # macOS/BSD
        uuidgen "$@"
    elif [ -f /proc/sys/kernel/random/uuid ]; then # Linux like alpine
        cat /proc/sys/kernel/random/uuid
    else
        local N=0 B T
        for (( N=0; N < 16; ++N )); do
            B=$(( "$RANDOM" % 255 ))

            if (( N == 6 )); then
                printf '4%x' $(( B%15 ))
            elif (( N == 8 )); then
                local C='89ab'
                printf '%c%x' ${C:$(( $RANDOM%${#C} )):1} $(( B%15 ))
            else
                printf '%02x' $B
            fi

            for T in 3 5 7 9; do
                (( T == N )) && printf '-' && break
            done
        done

        echo
    fi
}

# Refer https://gist.github.com/earthgecko/3089509
rand_string(){
    local LENGTH=${1:-32}
    local CHARSET=${2:-'a-zA-Z0-9'}
    # LC_CTYPE setting according to https://wxnacy.com/2018/03/07/tr-Illegal-byte-sequence/
    LC_CTYPE=C tr -c -d "$CHARSET" < /dev/random | fold -w "$LENGTH" | head -n 1
}

rand_alphanum(){ rand_string "$@"; }
rand_alpha(){ rand_string 'a-zA-Z'; }
rand_lowercase(){ rand_string 'a-z'; }
rand_uppercase(){ rand_string 'A-Z'; }

rand_ip_address(){
    echo "$(rand_int 0 255).$(rand_int 0 255).$(rand_int 0 255).$(rand_int 0 255)"
}

rand_email_address(){
    :
}

rand_valid_user_name(){
    :
}


if [ -n "$RANDOM" ]; then
    # ash, bash, zsh
    # TODO: padding zero in the beginning
    rand_int(){
        local ST=${1:?start number} EN=${2:?end number} SIZE=${3:-0}
        printf "%0${SIZE}d" $(( ( RANDOM % (EN-ST) )  + ST ))
    }
else
    # Refer https://unix.stackexchange.com/questions/140750/generate-random-numbers-in-specific-range
    rand_int(){
        local ST=${1:?start number}
        local EN=${2:?end number}

        local SIZE=${3:-0}

        printf "%0${SIZE}d" $(( ( $(hexdump -n 2 -e '/2 "%u"' /dev/urandom) % (EN-ST) )  + ST ))
    }
fi


rand_float(){
    local ST=${1:?start number}
    local EN=${2:?end number}
    local fix=${3:-3}

    local int floating 
    int="$(rand_int "$ST" "$EN")"
    floating="$(rand_int 0 $(( (10 ** fix) - 1 )) )"
    if [ "$floating" -eq 0 ]; then
        printf "%d" "$int"
    else
        printf "%.${fix}f" "$int.$floating"
    fi
}

