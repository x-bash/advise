# shellcheck shell=bash

# author:       Li Junhao           edwin.jh.lee@gmail.com    edwinjhlee.github.io
# maintainer:   Li Junhao      

# TODO: we should only check status
test_run_all() {
    local i
    for i in $(typeset -F | cut -d ' ' -f 3 | grep "tc:" | grep -v "tc:setup" | grep -v "tc:teardown"); do
        tc:setup
        @catch-final "
            Test Fail: codeline \$LINENO
        " "
            echo 'final'
            # aaa # Wrong command
        "
        eval "$i"
        tc:teardown
    done
}

tc_info(){
    echo hi
}


# TODO: We have to honor the TAP protocol
# TODO: Please follow http://testanything.org/tap-specification.html

test_tap(){
    # Version
    echo "TAP version 13" >&3

    # The Plan
    echo "1..${NUMBER_OF_TESTCASE}"

    # Test Line
    echo "ok $INDEX $DESCRIPTION"

    echo "not ok $INDEX $DESCRIPTION"
}

# Only works for bash
test_suite_bash(){
    local filepath func
    for filepath in "$@"; do
        if (
            for func in $(typeset -F | cut -d ' ' -f 3 | grep "tc:" ); do
                unset -f "$func" 
            done >&2
            # shellcheck disable=SC1090
            source "$filepath" >&2
            ( test_run_all ) >&2
            echo "$?"
        ); then
            :
        else
            echo "Fail on test file: $filepath"
            return 1
        fi

    done
}


test_eval(){
    local code
    if [ $# -eq 0 ]; then
        code="$(cat)"
    else
        code="$(IFS=; echo "$*")"
    fi

    if eval "$code"; then
        echo "Error happends in code: $code" >&2
    fi
}

xrc std/assert

test_assert(){
    local code
    code="$(IFS=; echo "$*")"
    if assert "$@"; then
        :
    else
        printf "Error in:\n  %s" "$code" >&2
    fi
}

alias @assert=test_assert


test_suite(){
    local testcase

    if [ $# -eq 0 ]; then 
        return 0
    fi

    printf "%s" "$1" >&2
    
    for testcase in "$@"; do
        printf "%s\n" "Running Test Case: "   testcase   >&2
        printf "------------------------\n"  >&2
        eval "$testcase"
        printf "------------------------\n"  >&2
    done
}

alias @run=test_suite

