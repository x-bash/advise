# shellcheck shell=bash

# expiration=1 filepath="/tmp/a.txt" cache.cmd "cmd-path"
# cache.cmd --filepath "" --expiration=60m "cmd-path"

# expiration=1 cache.cmd curl www.github.com/v4/api
# cache.cmd "curl www.github.com/v4/api" > a.txt

str.md5(){
    local cmd
    if command -v md5 >/dev/null 2>&1; then
        cmd=md5
    else
        cmd=md5sum
    fi
    if [ -z "$1" ]; then
        $cmd | cut -d ' ' -f 1
    else
        echo -n "$1" | $cmd | cut -d ' ' -f 1
    fi
}

cache.cmd(){
    local IFS=
    local CACHE_EXPIRATION_IN_MIN=${CACHE_EXPIRATION_IN_MIN:-${cache_expiration_in_min:-60}}
    local FILEPATH="${CACHE_FILE:-${cache_file:-""}}"
    if [ -z "$FILEPATH" ]; then
        FILEPATH="${CACHE_FOLDER:-${TMPDIR}x-cmd-path}"
        mkdir -p "$FILEPATH"
        FILEPATH="$FILEPATH/$(str.md5 "$*")"
    fi
    
    if find "$FILEPATH" -mmin "-${CACHE_EXPIRATION_IN_MIN}" 2>/dev/null | grep -q ^; then
        [[ "$STD_DEBUG" == *cache* ]] && echo "Using cache in Cache Path: $FILEPATH" >&2
        cat "$FILEPATH"
    else
        echo "FILEPATH does't exists or older than ${CACHE_EXPIRATION_IN_MIN} min. Update" >&2
        
        local temp_filepath
        temp_filepath=$(mktemp)

        if eval "$@"; then
            rm "$FILEPATH" 2>/dev/null
        fi | tee "$temp_filepath"

        if [ ! -f "$FILEPATH" ]; then
            mv "$temp_filepath" "$FILEPATH"
        fi
    fi
}

cache.cmd.setup.folder(){
    CACHE_FOLDER="${1:?Provide cache folder}"
}

# consider temp using the local disk?
cache.cmd.setup(){
    X_CMD_X_BASH_CACHE_CMD_FOLDER="$(mktemp)"
    export X_CMD_X_BASH_CACHE_CMD_FOLDER
    export X_CMD_X_BASH_CACHE_CMD_FOLDER_INDEX=0
    mkdir -p "$X_CMD_X_BASH_CACHE_CMD_FOLDER"
}

cache.cmd.teardown(){
    case "$X_CMD_X_BASH_CACHE_CMD_FOLDER" in
        /);;
        /bin*);;
        /home*);;
        # Do more work to protect. Checking the temp folder
        *) rm -rf "$X_CMD_X_BASH_CACHE_CMD_FOLDER"
    esac

    unset X_CMD_X_BASH_CACHE_CMD_FOLDER
    unset X_CMD_X_BASH_CACHE_CMD_FOLDER_INDEX
}
